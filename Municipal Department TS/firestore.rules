rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection: Read by authenticated, write by own UID
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    // Admin collection: Read/write by own UID
    match /admin/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    // Complaints collection
    match /complaints/{complaintId} {
      allow read: if request.auth != null; // All authenticated users can read
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId; // Only submitting user can create
      allow update: if request.auth != null && (request.auth.token.email.matches('.*@municipal\\.com$') || request.auth.token.email.matches('.*@officer\\.com$')); // Municipal/officer users can update
      allow delete: if request.auth != null && request.auth.token.email.matches('.*@officer\\.com$') && exists(/databases/$(database)/documents/users/$(request.auth.uid)) && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; // Admins can delete
    }
    match /{document=**} {
      allow read, write: if false; // Deny all other operations
    }
  }
}